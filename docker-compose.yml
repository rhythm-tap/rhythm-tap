version: '3'

services:

  # MySQL用コンテナ
  db:
    container_name: ${PJ_NAME}-mysql
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./docker/db/${DB_ENV}/Dockerfile
    volumes:
      - ./docker/data/mysql:/var/lib/mysql
      - ./docker/data/logs/mysql:/var/log/mysql
      # - ./src/etc:/docker-entrypoint-initdb.d
      - dbsocket:/var/run/mysqld
    ports:
      - ${DB_PORT}:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=${PJ_NAME}_db
      - MYSQL_USER=test
      - MYSQL_PASSWORD=test
      - DB_SOCKET=/var/run/mysqld/mysqld.sock
    command: mysqld --innodb-use-native-aio=0 --sql-mode=NO_ENGINE_SUBSTITUTION
    restart: always

  # phpMyAdmin用コンテナ
  phpmyadmin:
    container_name: ${PJ_NAME}-phpMyAdmin
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: mysql
    ports:
      - "${PHPMYADMIN_PORT}:80"
    restart: always

  # Flask用コンテナ
  web:
    container_name: ${PJ_NAME}-flask
    build:
      context: .
      dockerfile: ./docker/web/${WEB_ENV}/Dockerfile
    volumes:
      - ./src:/app
      - ./docker/data/logs/python:/data/logs/python
    expose:
      - 5000
      # - ${WEB_PORT}:5000
    restart: always
    depends_on:
      - db

  # 自己証明書用リバースプロキシ
  nginx:
    container_name: ${PJ_NAME}-nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    ports:
      - ${WEB_PORT}:443
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/data/logs/nginx:/var/log/nginx
    restart: always
    depends_on:
      - web

volumes:
  dbsocket: